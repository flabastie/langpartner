<?php

namespace LP\PartnerBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;
use Doctrine\ORM\QueryBuilder;

/**
 * MemberRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MemberRepository extends EntityRepository
{

  public function getMembers($page, $nbPerPage)
  {
    $query = $this->createQueryBuilder('a')
      	->getQuery()
    ;

    $query
      ->setFirstResult(($page-1) * $nbPerPage)
      ->setMaxResults($nbPerPage)
    ;

    return new Paginator($query, true);
  }

/* ------------------------------------------------------------------------------------------------------
 *      fonction myFindRange
 * ---------------------------------------------------------------------------------------------------- */

  public function myFindRange($start, $end)
  {
    $qb = $this->createQueryBuilder('a');

    $qb
      ->andWhere('a.dateBirth BETWEEN :start AND :end')
 //     ->setParameter('start', new \Datetime(date('Y').'-01-01'))  // Date entre le 1er janvier de cette année
 //     ->setParameter('end',   new \Datetime(date('Y').'-12-31'));  // Et le 31 décembre de cette année
        ->setParameter('start', new \Datetime($start))  // Date entre le 1er janvier de cette année
        ->setParameter('end',   new \Datetime($end));  // Et le 31 décembre de cette année

    // On peut ajouter ce qu'on veut après
    $qb->orderBy('a.dateBirth', 'DESC');

    return $qb
      ->getQuery()
      ->getResult()
    ;
  }

/* ------------------------------------------------------------------------------------------------------
 *      fonction findAvailability
 * ---------------------------------------------------------------------------------------------------- */

  public function findAvailability($start, $end)
  {
    $qb = $this->createQueryBuilder('a');
    $qb ->andWhere('a.dateStart BETWEEN :start AND :end OR a.dateEnd BETWEEN :start AND :end')
        ->setParameter('start', new \Datetime($start))  
        ->setParameter('end',   new \Datetime($end))
        ->orderBy('a.id', 'DESC');

    return $qb
        ->getQuery()
        ->getResult()
    ;
  }

  
}
